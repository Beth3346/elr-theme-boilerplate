/*-----------------------------------------------------------------------------
    Shapes
-----------------------------------------------------------------------------*/
// complex shapes are borrowed from: 
// https://github.com/MoOx/compass-recipes/blob/master/stylesheets/recipes/shape/

// Creates a circular element

@mixin drm-circle($diameter, $display: block) {
    display: $display;
    width: $diameter;
    height: $diameter;
    border-radius: $diameter;
}

// Creates an ellipse

@mixin drm-ellipse($width, $height, $display: block) {
    display: $display;
    height: $height;
    width: $width;
    border-radius: ($width / 2), ($height / 2);
}

// Creates a rectangular element

@mixin drm-rectangle($width, $height, $display: block, $border-radius: 0) {
    display: $display;
    width: $width;
    height: $height;
    box-sizing: border-box;

    @if $border-radius != 0 {
        border-radius: $border-radius;
    }
}

// Creates a square element

@mixin drm-square($width, $display: block, $border-radius: 0) {
    @include drm-rectangle($width, $width, $display, $border-radius);
}

// Creates a triangle element

@mixin drm-triangle($direction: top, $base: 50px, $height: half, $color: $light-grey)
{
        @if ($direction == top or $direction == right or $direction == bottom or $direction == left)
        {
                @if ($height == half)
                {
                        $height: $base/2;
                }
                @else if ($height == auto)
                {
                        $height: $base;
                }
        }
        @else // if ($direction == top-left or $direction == top-right or $direction == bottom-left or $direction == bottom-right)
        {
                @if ($height == half or $height == auto)
                {
                        $height: $base/2;
                }

                // do we need to make a 16px triangle for the median ?
                // $base: $base/sqrt(2);
                // $height: $height/sqrt(2);
        }
        // width is divided by 2 because it's used twice !
        $base: $base/2;

        width: 0;
        height: 0;

        @if ($direction == top) {
                // border-top
                border-right: $base solid transparent;
                border-bottom: $height solid $color;
                border-left: $base solid transparent;
        } @else if ($direction == bottom) {
                border-top: $height solid $color;
                border-right: $base solid transparent;
                // border-bottom
                border-left: $base solid transparent;
        } @else if ($direction == left) {
                border-top: $base solid transparent;
                border-right: $height solid $color;
                border-bottom: $base solid transparent;
                // border-left
        } @else if ($direction == right) {
                border-top: $base solid transparent;
                // border-right
                border-bottom: $base solid transparent;
                border-left: $height solid $color;
        } @else if ($direction == top-left) {
                border-top: $height solid $color;
                border-right: $base solid transparent;
                border-bottom: $height solid transparent;
                border-left: $base solid $color;
        } @else if ($direction == top-right) {
                border-top: $height solid $color;
                border-right: $base solid $color;
                border-bottom: $height solid transparent;
                border-left: $base solid transparent;
        } @else if ($direction == bottom-left) {
                border-top: $height solid transparent;
                border-right: $base solid transparent;
                border-bottom: $height solid $color;
                border-left: $base solid $color;
        } @else if ($direction == bottom-right) {
                border-top: $height solid transparent;
                border-right: $base solid $color;
                border-bottom: $height solid $color;
                border-left: $base solid transparent;
        } @else {
            // https://gist.github.com/1671259
                @warn "#{error("The direction used does not exist")}";
        }
}

// Creates an equilateral triangle

@mixin drm-equilateral-triangle($direction: top, $base: 100px, $color: #ccc) {
    $height: $base * 0.8;

    @if ($direction == top or $direction == right or $direction == bottom or $direction == left) {
        @include drm-triangle($direction, $base, $height, $color);
    } @else {
        @warn "#{error("This will not result in an equilateral triangle")}";
    }   
}

// Creates a right triangle

// Creates a quadrilateral-diamond
// default equilateral diamond
// positive skew for horizontal diamond
// negative skew for vertical diamond

@mixin drm-quadrilateral-diamond($size, $skew: 0)
{
    transform: rotate(-45deg) skew($skew#{deg}, $skew#{deg});
    @include drm-square($size);
}

// Creates a pentagon

@mixin drm-pentagon($width, $height, $background-color)
{
    position: relative;
    width: $width*0.54;
    border-width: $height*0.5 $width*0.18 0;
    border-style: solid;
    border-color: $background-color transparent;

    &:before {
        content: "";
        position: absolute;
        height: 0;
        width: 0;
        top: -$height*0.85;
        left: -$width*0.18;
        border-width: 0 $width*0.45 $height*0.35;
        border-style: solid;
        border-color: transparent transparent $background-color;
    }
}

// Creates a hexagon

@mixin drm-hexagon($width, $height, $background-color)
{
    width: $width;
    height: $height/2;
    background-color: $background-color;
    position: relative;
    
    &:before,
    &:after {
        content: "";
        position: absolute;
        width: 0;
        height: 0;

        left: 0;
        
        border-left: $width/2 solid transparent;
        border-right: $width/2 solid transparent;
    }

        &:before {
            top: -$width/4;
            border-bottom: $width/4 solid $background-color;
        }

        &:after {
            bottom: -$width/4;
            border-top: $width/4 solid $background-color;
        }
}

// Creates an octagon

@mixin drm-octagon($width, $height, $background-color)
{
    width: $width;
    height: $height*0.42;
    background: $background-color;
    position: relative;

    &:before,
    &:after {
        content: "";
        position: absolute;
        left: 0;

        width: $width*0.42;
        height: 0;
        
        border-left: $width*0.29 solid transparent;
        border-right: $width*0.29 solid transparent;        
    }

        &:before {
            top: -$height*0.29;
            border-bottom: $height*0.29 solid $background-color;
        }

        &:after {
            bottom: -$height*0.29;
            border-top: $height*0.29 solid $background-color;
        }
}

// Creates a parallelogram

@mixin drm-parallelogram($width, $height, $skew: 20) {
    width: $width;
    height: $height;
    transform: skew($skew#{deg}, 0deg);
}

// Creates a trapezoid

@mixin drm-trapezoid($width, $height, $background-color)
{
    border-bottom: $height solid $background-color;
    border-left: $width/2 solid transparent;
    border-right: $width/2 solid transparent;
    height: 0;
    width: $width;
}

// ribbon wrapper

@mixin drm-ribbon-wrapper ($height, $color, $stitch-color: white) {
    width: 114%;
    position: relative;
    left: -7%;
    text-align: center;
    margin: 20px 0 0 0;
    height: $height;
    box-sizing: border-box;
    @include drm-stitched-row($color, $stitch-color, none, 1, $darker-grey);

    &:before {
        content: "";
        position: absolute;
        top: -22px;
        left: -4px;
        z-index: -10;
        @include drm-triangle(bottom-right, 14px, 9px, darken($color, 20%));
    }

    &:after {
        content: "";
        position: absolute;
        top: -22px;
        right: -4px;
        z-index: -10;
        @include drm-triangle(bottom-left, 14px, 9px, darken($color, 20%));
    }
}   

// Star (5-points)
// @author Kit Macallister
// @link http://kitmacallister.com/2011/css-only-5-point-star/
@mixin drm-star-5($width, $background-color: #ccc, $z-index: 0)
{
    margin-top: $width/2;
    margin-bottom: $width/2;
    position: relative;
    display: block;
    width: 0;
    height: 0;

    border-right:  $width solid transparent;
    border-bottom: $width*0.7  solid $background-color;
    border-left:   $width solid transparent;
    transform: rotate(35deg);

    &:before,
    &:after
    {
        content: '';
        position: absolute;
        display: block;
        width: 0;
        height: 0;
        z-index: $z-index - 1;
    }

    &:before
    {
        top: -$width*0.45;
        left: -$width*0.65;
        border-bottom: $width*0.8 solid $background-color;
        border-left: $width*0.3 solid transparent;
        border-right: $width*0.3 solid transparent;
        transform: rotate(-35deg);
    }

    &:after
    {
        top: $width*0.03;
        left: -$width*1.05;
        border-right: $width solid transparent;
        border-bottom: $width*0.7 solid $background-color;
        border-left: $width solid transparent;
        transform: rotate(-70deg);
    }
}

// Star (6-points)
@mixin drm-star-6($width, $background-color: #ccc, $z-index: 0)
{
    width: 0;
    height: 0;
    border-left: $width/2 solid transparent;
    border-right: $width/2 solid transparent;
    border-bottom: $width solid $background-color;
    position: relative;
    z-index: $z-index;

    &:after
    {
        content: "";
        position: absolute;
        width: 0;
        height: 0;
        z-index: $z-index - 1;
        border-left: $width/2 solid transparent;
        border-right: $width/2 solid transparent;
        border-top: $width solid $background-color;        
        top: $width*0.3;
        left: - $width /2;
    }
}

// @author Alan Johnson
// @link http://commondream.net/post/8848553728/pure-css-badges
// @todo maybe improve this to be able to include text without the transform()
@mixin drm-star-8($width: 8em, $background-color: #ccc, $z-index: 0)
{
    &,
    &:before,
    {
        @include drm-square($width, $background-color);
    }

    position: relative;
    text-align: center;
    transform: rotate(20deg);
    z-index: $z-index;

    &:before
    {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        transform: rotate(135deg);
        z-index: $z-index - 1;
    }
}

@mixin drm-badge($width: 8em, $background-color: #ccc, $z-index: 0)
{
    &,
    &:before,
    &:after
    {
        @include drm-square($width, $color);
    }

    position: relative;
    text-align: center;
    z-index: $z-index;

    &:before,
    &:after
    {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        z-index: $z-index - 1;
    }
    
    &:before
    {
        transform: rotate(30deg);
    }

    &:after
    {
        transform: rotate(60deg);
    }
}