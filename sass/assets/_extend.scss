/*-----------------------------------------------------------------------------
	Extends
-----------------------------------------------------------------------------*/

// Centers an element on the page; for elements that take up the entire width 
// of the wrapper

%container {
	padding: 0;
	margin-right: auto;
	margin-left: auto;
	@include box-sizing(border-box);
	@include clearfix;

	@include breakpoint(trenta) {
		width: 70%;
		margin-left: 15%;
		margin-right: 15%;
	}

	@include breakpoint(venti) {
		width: 90%;
		margin-left: 5%;
		margin-right: 5%;
	}

	@include breakpoint(grande) {
		width: 100%;
		margin-left: 0;
		margin-right: 0;
	}
}

// Sets margin and padding to 0

%reset-box {
	margin: 0;
	padding: 0;
}

// For elements that take up the entire width of their container; for 
// container-inner elements

%row {
	@extend %reset-box;
	width: 100%;
	display: block;
	@include clearfix;
}

// Centers an element on the page

%center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// End of post block

%info-block {
	@extend %center-block;
	width: 90%;
	margin-top: 5%;
	margin-bottom: 5%;
	padding: 2%;
	text-align: center;
	@include box-sizing(border-box);
}	

/*-----------------------------------------------------------------------------
	Mixins
-----------------------------------------------------------------------------*/

// For main section headings; Usually applied to H1

@mixin section-heading($align: center) {
	text-align: $align;
	@include em-font(24em);
}

// For main section sub-headings; Usually applied to H2

@mixin section-sub-heading($align: center) {
	text-align: $align;
	margin: 0 0 20px 0;
	@include em-font(20em);
}

// Styles post-meta elements

@mixin post-meta($image) {
	background-image: $image;
	background-repeat: no-repeat;
	background-position: 0 2px;
	padding: 2px 0 2px 16px;
	margin-right: 7px;
	@include em-font(14em);
}

// Styles a rounded button with a 1px border and transparent background
// Useful for <button> and <a> elements

@mixin button-link($color, $bk-color, $width) {
	width: $width;
	border: 1px solid $color;
	color: $color;
	font-weight: bold;
	text-align: center;
	display: block;
	padding: 10px 0 10px 0;
	margin: 10px auto 10px auto;
	text-decoration: none;
	@include border-radius(3px);
	@include text-shadow(none);
	@include box-sizing(border-box);
	@include transition(all, .3s ease-out);

	&:hover {
		background-color: $color;
		color: $bk-color;
		text-decoration: none;
		@include text-shadow(none);
		@include transition(all, .3s ease-in);
	}	
}

// Styles a rounded button with a 1px border and solid background
// Useful for <button> and <a> elements

@mixin button-solid($color, $bk-color, $width) {
	width: $width;
	background-color: $color;
	color: $bk-color;
	font-weight: bold;
	text-align: center;
	display: block;
	padding: 10px 0 10px 0;
	margin: 10px auto 10px auto;
	text-decoration: none;
	@include border-radius(3px);
	@include text-shadow(none);
	@include box-sizing(border-box);
	@include transition(all, .3s ease-out);

	&:hover {
		background-color: $bk-color;
		color: $color;
		text-decoration: none;
		@include text-shadow(none);
		@include transition(all, .3s ease-in);
	}	
}

// Applies a solid 2px drop shadow to an element

@mixin solid-drop-shadow($color) {
	@include box-shadow($color 0 2px 0);
}

// Styles a rectangular button with a 2px solid drop shadow

@mixin rectangle-button($color, $text) {
	background-color: $color;
	font-weight: bold;
	color: $text;
	margin: 20px 0 20px 0;
	padding: 10px 60px 10px 60px;
	@include border-radius(0);
	@include solid-drop-shadow(darken($color, 10%));
	@include transition(all, .3s ease-out);

	&:hover {
		background-color: lighten($color, 10%);
		@include solid-drop-shadow($color);
		@include transition(all, .3s ease-in);
	}	
}

// Modern clearfix
// Use instead of overflow:hidden to clear floats

@mixin clearfix {
    &:after, &:before {
        content: "";
        display: table;
    }

    &:after {
        clear: both;
    }

	// for ie6 and ie7 support 
    & {
        *zoom: 1;
    }
}

// Styles box elements to take up the entire width of their container
// Accepts total number of elements for each row
// Each element will be the exact same width

@mixin feature-box($total: 3) {
	margin: 0;
	width: ( 100% / $total );
	float: left;
	@include box-sizing(border-box);

	@include breakpoint(tall) {
		padding: 10px 0 10px 0;
		width: 100%;
		float: none;
		@include box-sizing(border-box);
	}
}

// Styles box elements to take up the entire width of their container
// Accepts total number of elements for each row
// Each element will be the exact same width

@mixin feature-box-margin($total: 3, $margin: 1%) {
	margin: $margin;
	width: (100% / $total) - ($margin * 2);
	float: left;
	@include box-sizing(border-box);	
}

// Creates a slightly transparent border with a hex color backup
// Accepts a hex color value and pixel value for border-width

@mixin border-transparent($color, $thickness) {
	border-color: $color;
	border-color: rgba($color, 0.7); 
	border-width: $thickness;
	border-style: solid;	
}

// Creates a circular element

@mixin round-element($width) {
	width: $width;
	height: $width;
	@include border-radius(($width / 2));	
}

// Creates a square element

@mixin square($width) {
	width: $width;
	height: $width;
}

// Styles a <div> or <figure> with a transparent border that sits on top of the <img> element
// Specify a width and height on <div>/<figure> and <img> elements
// Make sure the containing element has a z-index of 100 and position: relative

@mixin figure-transparent-border($color, $thickness, $bk-color) {
	margin: auto;
	@include box-sizing(border-box);
	@include border-transparent($color, $thickness);
	@include transition(border, .3s ease-out);

	img {
		z-index: -10;
		position: relative;
		top: -$thickness;
		left: -$thickness;
		background-color: $color;
		@include box-sizing(border-box);
	}

	&:hover {
		@include border-transparent($bk-color, $thickness);
		@include transition(border, .3s ease-in);
	}
}

// creates a shadow with two thick borders and one thin border

@mixin triple-shadow($color1, $color2) {
	@include box-shadow(0 0 0 3px $color1, 0 0 0 10px $color2, 0 0 0 11px $color1);
}

// gives a slight shadow effect to text

@mixin inset-text($color) {
	@include text-shadow(1px 1px 0 $color);
}

// creates a bottom border with a slight shadow effect

@mixin inset-heading($color, $color2) {
	border-bottom: 1px solid $color;
	@include box-shadow(0 1px 0 $color2);
}

// creates a slight box shadow

@mixin inset-box($color) {
	@include box-shadow(1px 1px 0 $color);	
}

// creates a thick bottom drop shadow

@mixin boxy-drop-shadow($color) {
	@include box-shadow($grey 0 30px 15px -20px);	
}

// creates a double border effect

@mixin double-border($color1, $color2, $color3) {
	border: 1px solid $color1;
	@include box-shadow($color2 0 0 0 1px, $color3 0 0 0 2px);
}

// calculates em font size from px font size
// size should be in ems

@mixin em-font($size) {
	font-size: ($size / $default-font-size);
}

// vertically center element

@mixin vertically-center($container-element-height, $height) {
	position: absolute;
	top: ($container-element-height / 2) - ($height / 2);
}